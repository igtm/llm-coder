name: Playground Server Test

on:
  pull_request:
    branches:
      - main
    paths:
      - "playground/server/**"
      - .github/workflows/playground-server-test.yml

concurrency:
  # ref for branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        id: setup-python
        with:
          python-version-file: "./playground/server/pyproject.toml"
      - name: Install uv
        run: pip install uv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3.4.3
        with:
          path: playground/server/.venv
          key: server-uv-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('playground/server/uv.lock') }}
          restore-keys: |
            server-uv-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('playground/server/uv.lock') }}
            server-uv-venv-${{ steps.setup-python.outputs.python-version }}-
      - name: Install dependencies with uv
        run: |
          if [ ! -d ".venv" ]; then
            uv venv .venv --python ${{ steps.setup-python.outputs.python-path }}
            echo "Created .venv with uv"
          else
            echo ".venv already exists (likely from cache)"
          fi
          uv pip sync uv.lock
        working-directory: playground/server
      - name: Run lint with uv
        run: |
          uv run ruff check .
          uv run ruff format --check .
        working-directory: playground/server

  server-test:
    name: Server Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Start services
        run: |
          docker compose -f compose-ci.yml build db
          docker compose -f compose-ci.yml up -d &
        working-directory: server
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        id: setup-python
        with:
          python-version-file: "./server/pyproject.toml"
      - name: Install uv
        run: pip install uv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3.4.3
        with:
          path: playground/server/.venv
          key: server-uv-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('playground/server/uv.lock') }}
          restore-keys: |
            server-uv-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('playground/server/uv.lock') }}
            server-uv-venv-${{ steps.setup-python.outputs.python-version }}-
      - name: Install dependencies with uv
        run: |
          if [ ! -d ".venv" ]; then
            uv venv .venv --python ${{ steps.setup-python.outputs.python-path }}
            echo "Created .venv with uv"
          else
            echo ".venv already exists (likely from cache)"
          fi
          uv pip sync uv.lock
        working-directory: playground/server
      - name: Run tests for API
        run: |
          uv run pytest
        working-directory: playground/server
        env:
          AWS_DEFAULT_REGION: "ap-northeast-1"
          AWS_REGION: "ap-northeast-1"
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
          FORCE_ENV_FOR_DYNACONF: testing
