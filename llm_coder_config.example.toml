# llm_coder の設定ファイルサンプル

# 実行するプロンプト (省略可能。コマンドライン引数や標準入力で指定できます)
# prompt = "ここにデフォルトのプロンプトを記述します"

# 使用するLLMモデル
model = "gpt-4.1-nano" # 例: "gpt-4-turbo", "gemini-pro"

# LLMの温度パラメータ (0.0 から 2.0 の間。高いほど創造的、低いほど決定論的)
temperature = 0.5

# 最大実行イテレーション数 (エージェントが試行する最大回数)
max_iterations = 10

# ファイルシステム操作を許可するディレクトリのリスト
# デフォルトでは、CLIを実行したカレントワーキングディレクトリが許可されます。
# ここで指定すると、その設定がCLIのデフォルトよりも優先されます。
# コマンドラインで --allowed-dirs を指定すると、この設定は上書きされます。
allowed_dirs = [
    ".",          # カレントディレクトリを許可
    "playground", # playground ディレクトリを許可 (存在する場合)
    # "/tmp/llm_coder_output" # 必要に応じて他のディレクトリを追加
]

# 今後追加される可能性のある設定:
# log_level = "INFO" # "DEBUG", "INFO", "WARNING", "ERROR"
# execute_tests = true # 生成されたコードのテストを自動実行するかどうか

# ディレクトリ固有の設定 (README.md の例を参照)
# [directories.python_project]
# path = "src/python_project"
# lint_command = "pylint --disable=C0114,C0115,C0116,W0511"
# format_command = "black"
# test_command = "pytest"
